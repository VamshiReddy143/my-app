import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import SessionWrapper from "@/components/SessionWrapper";
import Leftsidebar from "@/components/left-sidebar";
import { getServerSession } from "next-auth";
import { authOptions } from "./api/auth/authOptions";
import RightSidebar from "@/components/RightSidebar";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});
const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const session = await getServerSession(authOptions);

  // Check if the current route is the register page
  const isRegisterPage = process.env.NEXT_PUBLIC_BASE_URL?.includes("/register");

  return (
    <html lang="en">
      <SessionWrapper session={session}>
        <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
          <div className="flex">
            {/* Conditionally render the left sidebar */}
            {!isRegisterPage && <Leftsidebar />}

            <main className="p-1 sm:mx-10 flex-grow">
              {children}
            </main>

            {/* Conditionally render the right sidebar */}
            {!isRegisterPage && (
              <div className="w-[20em]">
                <RightSidebar />
              </div>
            )}
          </div>
        </body>
      </SessionWrapper>
    </html>
  );
}